<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.springboot.dao.IProduct_qnaDao">

	<select id="qnaList" resultMap="Product_qnaDto">
		select * from
			(select rownum rnum, pq.* from
				(select q.*, r.reply_content from product_qna q, product_qna_reply r
				where q.qna_idx = r.qna_idx(+)
				 <if test="param2 != null">and ${param1} = #{param2}</if>
				order by qna_date desc) pq)
		where rnum between #{param3} and #{param4}	
	</select>
	
	<select id="qnaCount" resultType="_int">
		select count(*) from product_qna 
		<if test="param1 != null">where ${param1} = #{param2}</if>
	</select>
	
	<select id="qnaDetail" resultMap="Product_qnaDto">
		select q.*, r.reply_content from product_qna q, product_qna_reply r
        where q.qna_idx = r.qna_idx(+)
        and q.qna_idx = #{param1}
	</select>
	
	<insert id="insertQna" parameterType="com.study.springboot.dto.Product_qnaDto">
		insert into product_qna
		values ( product_qna_seq.nextval, #{qna_id}, #{qna_title}, 
		#{qna_content}, sysdate, #{qna_secret}, #{qna_pw}, #{qna_status}, #{product_idx} )
	</insert>
	
	<delete id="deleteQna">
	  DELETE FROM product_qna
	  WHERE qna_idx=#{ param1 }
	</delete>
	
	<select id="qna_list" resultType="com.study.springboot.dto.Product_qnaDto">
	SELECT * FROM product_qna
	</select>
	
	<resultMap type="com.study.springboot.dto.ProductDto" id="ProductDto">	
	<result column="product_idx" property="product_idx"/>	
	<result column="product_name" property="product_name"/>	
	<result column="product_image" property="product_image"/>
	<result column="product_price" property="product_price"/>
	<result column="product_category" property="product_category"/>
	<result column="product_gram" property="product_gram"/>
	<result column="product_explanation" property="product_explanation"/>
	</resultMap>
	
	<resultMap type="com.study.springboot.dto.Product_qnaDto" id="Product_qnaDto">
	<result column="qna_idx" property="qna_idx"/>
	<result column="qna_id" property="qna_id"/>
	<result column="qna_title" property="qna_title"/>
	<result column="qna_content" property="qna_content"/>
	<result column="qna_date" property="qna_date"/>
	<result column="qna_id" property="qna_id"/>
	<result column="qna_secret" property="qna_secret"/>
	<result column="qna_pw" property="qna_pw"/>
	<result column="qna_status" property="qna_status"/>
	<result column="product_idx" property="product_idx"/>	
	<collection property="productDto" resultMap="ProductDto"></collection>
	<collection property="replyDto" resultMap="ReplyDto"></collection>
	</resultMap>
	
	<resultMap type="com.study.springboot.dto.Product_qna_replyDto" id="ReplyDto">	
	<result column="reply_idx" property="reply_idx"/>	
	<result column="reply_id" property="reply_id"/>	
	<result column="reply_content" property="reply_content"/>
	<result column="reply_date" property="reply_date"/>
	<result column="qna_idx" property="qna_idx"/>
	</resultMap>
	
	<select id="joinTest" resultMap="Product_qnaDto">
	select q.*, p.product_name 
	from product_qna q, product p 
	where q.product_idx = p.product_idx
	order by q.qna_date desc
	</select>
	

	<select id="qnaListCount" resultType="_int">
		select count(*) from product_qna 
		<if test="param1 != null">where qna_id=#{param1} </if>
	</select>
	
	<insert id="insertReply" parameterType="com.study.springboot.dto.Product_qnaDto">
		insert into product_qna
		values ( product_qna_seq.nextval, #{qna_id}, #{qna_title}, 
		#{qna_content}, sysdate, #{qna_secret}, #{qna_pw}, '처리중', #{product_idx} )
	</insert>
	
	<delete id="deleteAnswer">
	  DELETE FROM product_qna
	  WHERE qna_idx=#{ param1 }
	</delete>
	
		<select id="qna_List" resultMap="ReplyDto">
		SELECT * FROM
			(SELECT 
					rownum rnum, dto1.* 
			 FROM
			(SELECT 
					qna.*, reply.reply_idx, reply.reply_id, reply.reply_date, qna.qna_idx qi 
			 FROM 
			 		product_qna qna, product_qna_reply reply
			<where>
				<if test="param1 != 'admin'">qna_id=#{param1} </if>
					and qna.qna_idx = reply.qna_idx(+)
				</where>				
					order by qna_date desc)
			dto1)
		WHERE rnum between #{param2} and #{param3}
	</select>
	
		<update id="updateStatus" parameterType="hashMap">
		update product_qna set
		qna_status=#{qna_status}
		where qna_idx=#{qna_idx}
	</update>
	
</mapper>
	
