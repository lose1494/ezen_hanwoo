<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.springboot.dao.IProductDao">
	<select id="productlist" resultType="com.study.springboot.dto.ProductDto">
		select * from product
		<if test="param1 != null">
			where product_category = #{param1}
		</if>
	</select>
	
	
	
	<select id="productDetail" resultType="com.study.springboot.dto.ProductDto">
		select * from product where product_idx = #{param1}
	</select>
	
	<insert id="insertProduct" parameterType="com.study.springboot.dto.ProductDto">
		insert into product
		values ( product_seq.nextval, #{product_name}, #{product_price},
		#{product_sort}, #{product_explanation}, #{product_gram} )
	</insert>
	
	<delete id="deleteProduct" >
	  delete from product
	  where product_idx = #{ param1 }
	</delete>
	
	<select id="item_list" resultType="com.study.springboot.dto.ProductDto">
		select * from product
	</select>
	
	<select id="item_Count" resultType="_int">
		select count(*) from product
	</select>
	
	<select id="item_result" resultType="com.study.springboot.dto.ProductDto">
		select * from product
		<where>
		<if test="param1 == 'all'">
			product_idx like '%${param2}%'
			or product_name like '%${param2}%'
			or product_category like '%${param2}%'
			</if>
			<if test="param1 != 'all'">
			${param1} like '%${param2}%'
			</if>
		</where>
	</select>
	
	<insert id="insert_Product" parameterType="com.study.springboot.dto.ProductDto">
		insert into product
		values ( product_seq.nextval, #{product_name}, #{product_price},
		#{product_sort}, #{product_explanation}, #{product_gram} )
	</insert>
	
	<select id="product_count" resultType="_int">
	select count(*) from product
	<choose>
	<when test="product_category eq '선물세트'">
	where product_category = '선물세트'
	</when>
	<when test="product_category eq '구이용'">
	where product_category = '구이용'
	</when>
	<when test="product_category eq '국거리'">
	where product_category = '국거리'
	</when>
	<when test="product_category eq '조리용'">
	where product_category = '조리용'
	</when>
	</choose>
	</select>
	 
	<insert id="productRegister" parameterType="HashMap">
		insert into product(product_idx,product_name,product_image,product_price,product_category,product_gram,product_image_ex)
		values (product_seq.nextval, #{product_name}, #{product_image},#{product_price},#{product_category},#{product_gram}, #{product_image_ex})
	</insert>
	 
	<update id="reviseProduct" parameterType="HashMap">
		UPDATE product SET
		product_idx = #{product_idx},
		product_name= #{product_name},
		<if test="product_image != null"> 
		product_image= #{product_image},
		</if>
		product_price= #{product_price},
		product_category= #{product_category},
		product_gram= #{product_gram}
		<if test="product_image_ex != null">
		,product_image_ex= #{product_image_ex}
		</if>
		WHERE product_idx = #{product_idx}
	</update>
	
	<resultMap type="com.study.springboot.dto.ReviewDto" id="ReviewDto">	
	<result column="review_idx" property="review_idx"/>
	<result column="review_star_rating" property="review_star_rating"/>	
	<result column="product_idx" property="product_idx"/>
	<result column="starRating" property="starRating"/>
	<result column="count" property="count"/>
	</resultMap>
	
	<resultMap type="com.study.springboot.dto.ProductDto" id="ProductDto">
	<result column="product_idx" property="product_idx"/>
	<result column="product_name" property="product_name"/>
	<result column="product_image" property="product_image"/>	
	<result column="product_price" property="product_price"/>
	<result column="product_category" property="product_category"/>
	<result column="product_gram" property="product_gram"/>
	<result column="product_explanation" property="product_explanation"/>
	<collection property="reviewDto" resultMap="ReviewDto"></collection>
	</resultMap>
	
	<select id="searchProduct" resultMap="ProductDto">
		
		select * from	
			(select rownum rnum, tb.* from
				(select * from
				
				(select round(avg(review_star_rating), 1) starRating, count(*) count, product_idx pi 
				from product_review group by product_idx) r,
				 
				(select product.*, to_number(replace(product_price, ',')) rp 
				from product) p
				
				where r.pi(+) = p.product_idx
				and p.product_name like '%${param1}%'
				
				<if test="param2 != 'select'">
					<include refid="searchSort"></include>
				</if> ) tb)
			where rnum between #{param3} and #{param4}
		
	</select>
	
	<sql id="searchSort">
		<if test="param2 == 'star_rating'">
			order by r.starRating desc nulls last
		</if>
		<if test="param2 == 'price_high'">
			order by rp desc
		</if>
		<if test="param2 == 'price_row'">
			order by rp
		</if>
	</sql>
	
	<select id="productCount" resultType="_int">
		select count(*) from product
		where product_name like '%${param1}%'
	</select>
</mapper>